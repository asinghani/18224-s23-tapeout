/* Generated by Yosys 0.25+83 (git sha1 755b753e1, aarch64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os) */

/* top =  1  */
/* src = "d02_example_counter/src/toplevel_chip.v:4.1-18.10" */
module d02_example_counter(io_in, io_out);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  /* force_downto = 32'd1 */
  /* src = "d02_example_counter/src/toplevel_chip.v:9.13-14.6|d02_example_counter/src/chip.sv:18.23-18.33|/Users/anish/workspace/oss-cad-suite/libexec/../share/yosys/techmap.v:270.26-270.27" */
  wire [11:0] _059_;
  /* src = "d02_example_counter/src/toplevel_chip.v:5.18-5.23" */
  input [13:0] io_in;
  wire [13:0] io_in;
  /* src = "d02_example_counter/src/toplevel_chip.v:6.19-6.25" */
  output [13:0] io_out;
  wire [13:0] io_out;
  /* hdlname = "mchip clock" */
  /* src = "d02_example_counter/src/toplevel_chip.v:9.13-14.6|d02_example_counter/src/chip.sv:5.17-5.22" */
  wire \mchip.clock ;
  /* hdlname = "mchip enable" */
  /* src = "d02_example_counter/src/toplevel_chip.v:9.13-14.6|d02_example_counter/src/chip.sv:9.11-9.17" */
  wire \mchip.enable ;
  /* hdlname = "mchip io_in" */
  /* src = "d02_example_counter/src/toplevel_chip.v:9.13-14.6|d02_example_counter/src/chip.sv:4.24-4.29" */
  /* unused_bits = "2 3 4 5 6 7 8 9 10 11" */
  wire [11:0] \mchip.io_in ;
  /* hdlname = "mchip io_out" */
  /* src = "d02_example_counter/src/toplevel_chip.v:9.13-14.6|d02_example_counter/src/chip.sv:6.25-6.31" */
  reg [11:0] \mchip.io_out ;
  /* hdlname = "mchip reset" */
  /* src = "d02_example_counter/src/toplevel_chip.v:9.13-14.6|d02_example_counter/src/chip.sv:5.24-5.29" */
  wire \mchip.reset ;
  /* hdlname = "mchip updown" */
  /* src = "d02_example_counter/src/toplevel_chip.v:9.13-14.6|d02_example_counter/src/chip.sv:9.19-9.25" */
  wire \mchip.updown ;
  assign _059_[0] = ~\mchip.io_out [0];
  assign _001_ = ~(io_in[1] & io_in[0]);
  assign _002_ = io_in[1] | ~(io_in[0]);
  assign _000_ = ~(_002_ & _001_);
  assign _003_ = _001_ ^ \mchip.io_out [1];
  assign _059_[1] = _003_ ^ _059_[0];
  assign _004_ = \mchip.io_out [1] & ~(_001_);
  assign _005_ = \mchip.io_out [0] & ~(_003_);
  assign _006_ = _005_ | _004_;
  assign _007_ = _001_ ^ \mchip.io_out [2];
  assign _059_[2] = ~(_007_ ^ _006_);
  assign _008_ = \mchip.io_out [2] & ~(_001_);
  assign _009_ = _006_ & ~(_007_);
  assign _010_ = ~(_009_ | _008_);
  assign _011_ = _001_ ^ \mchip.io_out [3];
  assign _059_[3] = _011_ ^ _010_;
  assign _012_ = _011_ | _007_;
  assign _013_ = _006_ & ~(_012_);
  assign _014_ = \mchip.io_out [3] & ~(_001_);
  assign _015_ = _008_ & ~(_011_);
  assign _016_ = _015_ | _014_;
  assign _017_ = _016_ | _013_;
  assign _018_ = _001_ ^ \mchip.io_out [4];
  assign _059_[4] = ~(_018_ ^ _017_);
  assign _019_ = \mchip.io_out [4] & ~(_001_);
  assign _020_ = _017_ & ~(_018_);
  assign _021_ = ~(_020_ | _019_);
  assign _022_ = _001_ ^ \mchip.io_out [5];
  assign _059_[5] = _022_ ^ _021_;
  assign _023_ = _022_ | _018_;
  assign _024_ = _017_ & ~(_023_);
  assign _025_ = \mchip.io_out [5] & ~(_001_);
  assign _026_ = _019_ & ~(_022_);
  assign _027_ = _026_ | _025_;
  assign _028_ = _027_ | _024_;
  assign _029_ = _001_ ^ \mchip.io_out [6];
  assign _059_[6] = ~(_029_ ^ _028_);
  assign _030_ = \mchip.io_out [6] & ~(_001_);
  assign _031_ = _028_ & ~(_029_);
  assign _032_ = ~(_031_ | _030_);
  assign _033_ = _001_ ^ \mchip.io_out [7];
  assign _059_[7] = _033_ ^ _032_;
  assign _034_ = \mchip.io_out [7] & ~(_001_);
  assign _035_ = _030_ & ~(_033_);
  assign _036_ = _035_ | _034_;
  assign _037_ = _033_ | _029_;
  assign _038_ = _027_ & ~(_037_);
  assign _039_ = _038_ | _036_;
  assign _040_ = _037_ | _023_;
  assign _041_ = _017_ & ~(_040_);
  assign _042_ = _041_ | _039_;
  assign _043_ = ~(_001_ ^ \mchip.io_out [8]);
  assign _059_[8] = _043_ ^ _042_;
  assign _044_ = \mchip.io_out [8] & ~(_001_);
  assign _045_ = _043_ & _042_;
  assign _046_ = _045_ | _044_;
  assign _047_ = ~(_001_ ^ \mchip.io_out [9]);
  assign _059_[9] = _047_ ^ _046_;
  assign _048_ = \mchip.io_out [9] & ~(_001_);
  assign _049_ = _047_ & _044_;
  assign _050_ = _049_ | _048_;
  assign _051_ = ~(_047_ & _043_);
  assign _052_ = _042_ & ~(_051_);
  assign _053_ = _052_ | _050_;
  assign _054_ = ~(_001_ ^ \mchip.io_out [10]);
  assign _059_[10] = _054_ ^ _053_;
  assign _055_ = \mchip.io_out [10] & ~(_001_);
  assign _056_ = _054_ & _053_;
  assign _057_ = _056_ | _055_;
  assign _058_ = ~(_001_ ^ \mchip.io_out [11]);
  assign _059_[11] = _058_ ^ _057_;
  /* \always_ff  = 32'd1 */
  /* src = "d02_example_counter/src/toplevel_chip.v:9.13-14.6|d02_example_counter/src/chip.sv:13.5-23.8" */
  always @(posedge io_in[12])
    if (io_in[13]) \mchip.io_out [0] <= 1'h0;
    else if (_000_) \mchip.io_out [0] <= _059_[0];
  /* \always_ff  = 32'd1 */
  /* src = "d02_example_counter/src/toplevel_chip.v:9.13-14.6|d02_example_counter/src/chip.sv:13.5-23.8" */
  always @(posedge io_in[12])
    if (io_in[13]) \mchip.io_out [1] <= 1'h0;
    else if (_000_) \mchip.io_out [1] <= _059_[1];
  /* \always_ff  = 32'd1 */
  /* src = "d02_example_counter/src/toplevel_chip.v:9.13-14.6|d02_example_counter/src/chip.sv:13.5-23.8" */
  always @(posedge io_in[12])
    if (io_in[13]) \mchip.io_out [2] <= 1'h0;
    else if (_000_) \mchip.io_out [2] <= _059_[2];
  /* \always_ff  = 32'd1 */
  /* src = "d02_example_counter/src/toplevel_chip.v:9.13-14.6|d02_example_counter/src/chip.sv:13.5-23.8" */
  always @(posedge io_in[12])
    if (io_in[13]) \mchip.io_out [3] <= 1'h0;
    else if (_000_) \mchip.io_out [3] <= _059_[3];
  /* \always_ff  = 32'd1 */
  /* src = "d02_example_counter/src/toplevel_chip.v:9.13-14.6|d02_example_counter/src/chip.sv:13.5-23.8" */
  always @(posedge io_in[12])
    if (io_in[13]) \mchip.io_out [4] <= 1'h0;
    else if (_000_) \mchip.io_out [4] <= _059_[4];
  /* \always_ff  = 32'd1 */
  /* src = "d02_example_counter/src/toplevel_chip.v:9.13-14.6|d02_example_counter/src/chip.sv:13.5-23.8" */
  always @(posedge io_in[12])
    if (io_in[13]) \mchip.io_out [5] <= 1'h0;
    else if (_000_) \mchip.io_out [5] <= _059_[5];
  /* \always_ff  = 32'd1 */
  /* src = "d02_example_counter/src/toplevel_chip.v:9.13-14.6|d02_example_counter/src/chip.sv:13.5-23.8" */
  always @(posedge io_in[12])
    if (io_in[13]) \mchip.io_out [6] <= 1'h0;
    else if (_000_) \mchip.io_out [6] <= _059_[6];
  /* \always_ff  = 32'd1 */
  /* src = "d02_example_counter/src/toplevel_chip.v:9.13-14.6|d02_example_counter/src/chip.sv:13.5-23.8" */
  always @(posedge io_in[12])
    if (io_in[13]) \mchip.io_out [7] <= 1'h0;
    else if (_000_) \mchip.io_out [7] <= _059_[7];
  /* \always_ff  = 32'd1 */
  /* src = "d02_example_counter/src/toplevel_chip.v:9.13-14.6|d02_example_counter/src/chip.sv:13.5-23.8" */
  always @(posedge io_in[12])
    if (io_in[13]) \mchip.io_out [8] <= 1'h0;
    else if (_000_) \mchip.io_out [8] <= _059_[8];
  /* \always_ff  = 32'd1 */
  /* src = "d02_example_counter/src/toplevel_chip.v:9.13-14.6|d02_example_counter/src/chip.sv:13.5-23.8" */
  always @(posedge io_in[12])
    if (io_in[13]) \mchip.io_out [9] <= 1'h0;
    else if (_000_) \mchip.io_out [9] <= _059_[9];
  /* \always_ff  = 32'd1 */
  /* src = "d02_example_counter/src/toplevel_chip.v:9.13-14.6|d02_example_counter/src/chip.sv:13.5-23.8" */
  always @(posedge io_in[12])
    if (io_in[13]) \mchip.io_out [10] <= 1'h0;
    else if (_000_) \mchip.io_out [10] <= _059_[10];
  /* \always_ff  = 32'd1 */
  /* src = "d02_example_counter/src/toplevel_chip.v:9.13-14.6|d02_example_counter/src/chip.sv:13.5-23.8" */
  always @(posedge io_in[12])
    if (io_in[13]) \mchip.io_out [11] <= 1'h0;
    else if (_000_) \mchip.io_out [11] <= _059_[11];
  assign io_out = { 2'h0, \mchip.io_out  };
  assign \mchip.clock  = io_in[12];
  assign \mchip.enable  = io_in[0];
  assign \mchip.io_in  = io_in[11:0];
  assign \mchip.reset  = io_in[13];
  assign \mchip.updown  = io_in[1];
endmodule
