/* Generated by Yosys 0.25+83 (git sha1 755b753e1, aarch64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os) */

/* top =  1  */
/* src = "d32_ngaertne_cpu/src/wrapper.v:2.9-12.18" */
module d32_ngaertne_cpu(io_in, io_out);
  wire _0000_;
  wire _0001_;
  wire _0002_;
  wire _0003_;
  wire _0004_;
  wire _0005_;
  wire _0006_;
  wire _0007_;
  wire _0008_;
  wire _0009_;
  wire _0010_;
  wire _0011_;
  wire _0012_;
  wire _0013_;
  wire _0014_;
  wire _0015_;
  wire _0016_;
  wire _0017_;
  wire _0018_;
  wire _0019_;
  wire _0020_;
  wire _0021_;
  wire _0022_;
  wire _0023_;
  wire _0024_;
  wire _0025_;
  wire _0026_;
  wire _0027_;
  wire _0028_;
  wire _0029_;
  wire _0030_;
  wire _0031_;
  wire _0032_;
  wire _0033_;
  wire _0034_;
  wire _0035_;
  wire _0036_;
  wire _0037_;
  wire _0038_;
  wire _0039_;
  wire _0040_;
  wire _0041_;
  wire _0042_;
  wire _0043_;
  wire _0044_;
  wire _0045_;
  wire _0046_;
  wire _0047_;
  wire _0048_;
  wire _0049_;
  wire _0050_;
  wire _0051_;
  wire _0052_;
  wire _0053_;
  wire _0054_;
  wire _0055_;
  wire _0056_;
  wire _0057_;
  wire _0058_;
  wire _0059_;
  wire _0060_;
  wire _0061_;
  wire _0062_;
  wire _0063_;
  wire _0064_;
  wire _0065_;
  wire _0066_;
  wire _0067_;
  wire _0068_;
  wire _0069_;
  wire _0070_;
  wire _0071_;
  wire _0072_;
  wire _0073_;
  wire _0074_;
  wire _0075_;
  wire _0076_;
  wire _0077_;
  wire _0078_;
  wire _0079_;
  wire _0080_;
  wire _0081_;
  wire _0082_;
  wire _0083_;
  wire _0084_;
  wire _0085_;
  wire _0086_;
  wire _0087_;
  wire _0088_;
  wire _0089_;
  wire _0090_;
  wire _0091_;
  wire _0092_;
  wire _0093_;
  wire _0094_;
  wire _0095_;
  wire _0096_;
  wire _0097_;
  wire _0098_;
  wire _0099_;
  wire _0100_;
  wire _0101_;
  wire _0102_;
  wire _0103_;
  wire _0104_;
  wire _0105_;
  wire _0106_;
  wire _0107_;
  wire _0108_;
  wire _0109_;
  wire _0110_;
  wire _0111_;
  wire _0112_;
  wire _0113_;
  wire _0114_;
  wire _0115_;
  wire _0116_;
  wire _0117_;
  wire _0118_;
  wire _0119_;
  wire _0120_;
  wire _0121_;
  wire _0122_;
  wire _0123_;
  wire _0124_;
  wire _0125_;
  wire _0126_;
  wire _0127_;
  wire _0128_;
  wire _0129_;
  wire _0130_;
  wire _0131_;
  wire _0132_;
  wire _0133_;
  wire _0134_;
  wire _0135_;
  wire _0136_;
  wire _0137_;
  wire _0138_;
  wire _0139_;
  wire _0140_;
  wire _0141_;
  wire _0142_;
  wire _0143_;
  wire _0144_;
  wire _0145_;
  wire _0146_;
  wire _0147_;
  wire _0148_;
  wire _0149_;
  wire _0150_;
  wire _0151_;
  wire _0152_;
  wire _0153_;
  wire _0154_;
  wire _0155_;
  wire _0156_;
  wire _0157_;
  wire _0158_;
  wire _0159_;
  wire _0160_;
  wire _0161_;
  wire _0162_;
  wire _0163_;
  wire _0164_;
  wire _0165_;
  wire _0166_;
  wire _0167_;
  wire _0168_;
  wire _0169_;
  wire _0170_;
  wire _0171_;
  wire _0172_;
  wire _0173_;
  wire _0174_;
  wire _0175_;
  wire _0176_;
  wire _0177_;
  wire _0178_;
  wire _0179_;
  wire _0180_;
  wire _0181_;
  wire _0182_;
  wire _0183_;
  wire _0184_;
  wire _0185_;
  wire _0186_;
  wire _0187_;
  wire _0188_;
  wire _0189_;
  wire _0190_;
  wire _0191_;
  wire _0192_;
  wire _0193_;
  wire _0194_;
  wire _0195_;
  wire _0196_;
  wire _0197_;
  wire _0198_;
  wire _0199_;
  wire _0200_;
  wire _0201_;
  wire _0202_;
  wire _0203_;
  wire _0204_;
  wire _0205_;
  wire _0206_;
  wire _0207_;
  wire _0208_;
  wire _0209_;
  wire _0210_;
  wire _0211_;
  wire _0212_;
  wire _0213_;
  wire _0214_;
  wire _0215_;
  wire _0216_;
  wire _0217_;
  wire _0218_;
  wire _0219_;
  wire _0220_;
  wire _0221_;
  wire _0222_;
  wire _0223_;
  wire _0224_;
  wire _0225_;
  wire _0226_;
  wire _0227_;
  wire _0228_;
  wire _0229_;
  wire _0230_;
  wire _0231_;
  wire _0232_;
  wire _0233_;
  wire _0234_;
  wire _0235_;
  wire _0236_;
  wire _0237_;
  wire _0238_;
  wire _0239_;
  wire _0240_;
  wire _0241_;
  wire _0242_;
  wire _0243_;
  wire _0244_;
  wire _0245_;
  wire _0246_;
  wire _0247_;
  wire _0248_;
  wire _0249_;
  wire _0250_;
  wire _0251_;
  wire _0252_;
  wire _0253_;
  wire _0254_;
  wire _0255_;
  wire _0256_;
  wire _0257_;
  wire _0258_;
  wire _0259_;
  wire _0260_;
  wire _0261_;
  wire _0262_;
  wire _0263_;
  wire _0264_;
  wire _0265_;
  wire _0266_;
  wire _0267_;
  wire _0268_;
  wire _0269_;
  wire _0270_;
  wire _0271_;
  wire _0272_;
  wire _0273_;
  wire _0274_;
  wire _0275_;
  wire _0276_;
  wire _0277_;
  wire _0278_;
  wire _0279_;
  wire _0280_;
  wire _0281_;
  wire _0282_;
  wire _0283_;
  wire _0284_;
  wire _0285_;
  wire _0286_;
  wire _0287_;
  wire _0288_;
  wire _0289_;
  wire _0290_;
  wire _0291_;
  wire _0292_;
  wire _0293_;
  wire _0294_;
  wire _0295_;
  wire _0296_;
  wire _0297_;
  wire _0298_;
  wire _0299_;
  wire _0300_;
  wire _0301_;
  wire _0302_;
  wire _0303_;
  wire _0304_;
  wire _0305_;
  wire _0306_;
  wire _0307_;
  wire _0308_;
  wire _0309_;
  wire _0310_;
  wire _0311_;
  wire _0312_;
  wire _0313_;
  wire _0314_;
  wire _0315_;
  wire _0316_;
  wire _0317_;
  wire _0318_;
  wire _0319_;
  wire _0320_;
  wire _0321_;
  wire _0322_;
  wire _0323_;
  wire _0324_;
  wire _0325_;
  wire _0326_;
  wire _0327_;
  wire _0328_;
  wire _0329_;
  wire _0330_;
  wire _0331_;
  wire _0332_;
  wire _0333_;
  wire _0334_;
  wire _0335_;
  wire _0336_;
  wire _0337_;
  wire _0338_;
  wire _0339_;
  wire _0340_;
  wire _0341_;
  wire _0342_;
  wire _0343_;
  wire _0344_;
  wire _0345_;
  wire _0346_;
  wire _0347_;
  wire _0348_;
  wire _0349_;
  wire _0350_;
  wire _0351_;
  wire _0352_;
  wire _0353_;
  wire _0354_;
  wire _0355_;
  wire _0356_;
  wire _0357_;
  wire _0358_;
  wire _0359_;
  wire _0360_;
  wire _0361_;
  wire _0362_;
  wire _0363_;
  wire _0364_;
  wire _0365_;
  wire _0366_;
  wire _0367_;
  wire _0368_;
  wire _0369_;
  wire _0370_;
  wire _0371_;
  wire _0372_;
  wire _0373_;
  wire _0374_;
  wire _0375_;
  wire _0376_;
  wire _0377_;
  wire _0378_;
  wire _0379_;
  wire _0380_;
  wire _0381_;
  wire _0382_;
  wire _0383_;
  wire _0384_;
  wire _0385_;
  wire _0386_;
  wire _0387_;
  wire _0388_;
  wire _0389_;
  wire _0390_;
  wire _0391_;
  wire _0392_;
  wire _0393_;
  wire _0394_;
  wire _0395_;
  wire _0396_;
  wire _0397_;
  wire _0398_;
  wire _0399_;
  wire _0400_;
  wire _0401_;
  wire _0402_;
  wire _0403_;
  wire _0404_;
  wire _0405_;
  wire _0406_;
  wire _0407_;
  wire _0408_;
  wire _0409_;
  wire _0410_;
  wire _0411_;
  wire _0412_;
  wire _0413_;
  wire _0414_;
  wire _0415_;
  wire _0416_;
  wire _0417_;
  wire _0418_;
  wire _0419_;
  wire _0420_;
  wire _0421_;
  wire _0422_;
  wire _0423_;
  wire _0424_;
  wire _0425_;
  wire _0426_;
  wire _0427_;
  wire _0428_;
  wire _0429_;
  wire _0430_;
  wire _0431_;
  wire _0432_;
  wire _0433_;
  wire _0434_;
  wire _0435_;
  wire _0436_;
  wire _0437_;
  wire _0438_;
  wire _0439_;
  wire _0440_;
  wire _0441_;
  wire _0442_;
  wire _0443_;
  wire _0444_;
  wire _0445_;
  wire _0446_;
  wire _0447_;
  wire _0448_;
  wire _0449_;
  wire _0450_;
  wire _0451_;
  wire _0452_;
  wire _0453_;
  wire _0454_;
  wire _0455_;
  wire _0456_;
  wire _0457_;
  wire _0458_;
  wire _0459_;
  wire _0460_;
  wire _0461_;
  wire _0462_;
  wire _0463_;
  wire _0464_;
  wire _0465_;
  wire _0466_;
  wire _0467_;
  wire _0468_;
  wire _0469_;
  wire _0470_;
  wire _0471_;
  wire _0472_;
  wire _0473_;
  wire _0474_;
  wire _0475_;
  wire _0476_;
  wire _0477_;
  wire _0478_;
  wire _0479_;
  wire _0480_;
  wire _0481_;
  wire _0482_;
  wire _0483_;
  wire _0484_;
  wire _0485_;
  wire _0486_;
  wire _0487_;
  wire _0488_;
  wire _0489_;
  wire _0490_;
  wire _0491_;
  wire _0492_;
  wire _0493_;
  wire _0494_;
  wire _0495_;
  /* force_downto = 32'd1 */
  /* src = "d32_ngaertne_cpu/src/wrapper.v:7.30-10.14|d32_ngaertne_cpu/src/cpu.sv:65.7-170.14|d32_ngaertne_cpu/src/cpu.sv:0.0-0.0|/Users/anish/workspace/oss-cad-suite/libexec/../share/yosys/techmap.v:575.21-575.22" */
  wire [3:0] _0496_;
  /* force_downto = 32'd1 */
  /* src = "d32_ngaertne_cpu/src/wrapper.v:7.30-10.14|d32_ngaertne_cpu/src/cpu.sv:79.11-168.18|d32_ngaertne_cpu/src/cpu.sv:0.0-0.0|/Users/anish/workspace/oss-cad-suite/libexec/../share/yosys/techmap.v:575.21-575.22" */
  wire [3:0] _0497_;
  /* src = "d32_ngaertne_cpu/src/wrapper.v:3.26-3.31" */
  input [13:0] io_in;
  wire [13:0] io_in;
  /* src = "d32_ngaertne_cpu/src/wrapper.v:4.27-4.33" */
  output [13:0] io_out;
  wire [13:0] io_out;
  /* hdlname = "mchip clock" */
  /* src = "d32_ngaertne_cpu/src/wrapper.v:7.30-10.14|d32_ngaertne_cpu/src/cpu.sv:6.9-6.14" */
  wire \mchip.clock ;
  reg [3:0] \mchip.data[0] ;
  reg [3:0] \mchip.data[10] ;
  reg [3:0] \mchip.data[11] ;
  reg [3:0] \mchip.data[12] ;
  reg [3:0] \mchip.data[13] ;
  reg [3:0] \mchip.data[14] ;
  reg [3:0] \mchip.data[15] ;
  reg [3:0] \mchip.data[1] ;
  reg [3:0] \mchip.data[2] ;
  reg [3:0] \mchip.data[3] ;
  reg [3:0] \mchip.data[4] ;
  reg [3:0] \mchip.data[5] ;
  reg [3:0] \mchip.data[6] ;
  reg [3:0] \mchip.data[7] ;
  reg [3:0] \mchip.data[8] ;
  reg [3:0] \mchip.data[9] ;
  /* hdlname = "mchip inputdata" */
  /* src = "d32_ngaertne_cpu/src/wrapper.v:7.30-10.14|d32_ngaertne_cpu/src/cpu.sv:56.15-56.24" */
  wire [3:0] \mchip.inputdata ;
  /* enum_type = "$enum1" */
  /* hdlname = "mchip instruction" */
  /* src = "d32_ngaertne_cpu/src/wrapper.v:7.30-10.14|d32_ngaertne_cpu/src/cpu.sv:47.5-47.16" */
  wire [1:0] \mchip.instruction ;
  /* hdlname = "mchip io_in" */
  /* src = "d32_ngaertne_cpu/src/wrapper.v:7.30-10.14|d32_ngaertne_cpu/src/cpu.sv:3.24-3.29" */
  wire [7:0] \mchip.io_in ;
  /* hdlname = "mchip io_out" */
  /* src = "d32_ngaertne_cpu/src/wrapper.v:7.30-10.14|d32_ngaertne_cpu/src/cpu.sv:4.24-4.30" */
  wire [7:0] \mchip.io_out ;
  /* hdlname = "mchip lastdata3" */
  /* src = "d32_ngaertne_cpu/src/wrapper.v:7.30-10.14|d32_ngaertne_cpu/src/cpu.sv:57.9-57.18" */
  reg \mchip.lastdata3 ;
  /* hdlname = "mchip pc" */
  /* src = "d32_ngaertne_cpu/src/wrapper.v:7.30-10.14|d32_ngaertne_cpu/src/cpu.sv:49.15-49.17" */
  reg [3:0] \mchip.pc ;
  reg [3:0] \mchip.prog[0] ;
  reg [3:0] \mchip.prog[10] ;
  reg [3:0] \mchip.prog[11] ;
  reg [3:0] \mchip.prog[12] ;
  reg [3:0] \mchip.prog[13] ;
  reg [3:0] \mchip.prog[14] ;
  reg [3:0] \mchip.prog[15] ;
  reg [3:0] \mchip.prog[1] ;
  reg [3:0] \mchip.prog[2] ;
  reg [3:0] \mchip.prog[3] ;
  reg [3:0] \mchip.prog[4] ;
  reg [3:0] \mchip.prog[5] ;
  reg [3:0] \mchip.prog[6] ;
  reg [3:0] \mchip.prog[7] ;
  reg [3:0] \mchip.prog[8] ;
  reg [3:0] \mchip.prog[9] ;
  /* hdlname = "mchip regval" */
  /* src = "d32_ngaertne_cpu/src/wrapper.v:7.30-10.14|d32_ngaertne_cpu/src/cpu.sv:54.15-54.21" */
  reg [3:0] \mchip.regval ;
  /* hdlname = "mchip reset" */
  /* src = "d32_ngaertne_cpu/src/wrapper.v:7.30-10.14|d32_ngaertne_cpu/src/cpu.sv:6.16-6.21" */
  wire \mchip.reset ;
  assign _0037_ = io_in[2] & io_in[3];
  assign _0038_ = ~\mchip.pc [3];
  assign _0039_ = ~\mchip.pc [2];
  assign _0040_ = ~\mchip.pc [1];
  assign _0041_ = \mchip.pc [0] ? \mchip.prog[1] [1] : \mchip.prog[0] [1];
  assign _0042_ = \mchip.pc [0] ? \mchip.prog[3] [1] : \mchip.prog[2] [1];
  assign _0043_ = \mchip.pc [1] ? _0042_ : _0041_;
  assign _0044_ = \mchip.pc [0] ? \mchip.prog[5] [1] : \mchip.prog[4] [1];
  assign _0045_ = \mchip.pc [0] ? \mchip.prog[7] [1] : \mchip.prog[6] [1];
  assign _0046_ = \mchip.pc [1] ? _0045_ : _0044_;
  assign _0047_ = \mchip.pc [2] ? _0046_ : _0043_;
  assign _0048_ = \mchip.pc [0] ? \mchip.prog[9] [1] : \mchip.prog[8] [1];
  assign _0049_ = \mchip.pc [0] ? \mchip.prog[11] [1] : \mchip.prog[10] [1];
  assign _0050_ = \mchip.pc [1] ? _0049_ : _0048_;
  assign _0051_ = \mchip.pc [0] ? \mchip.prog[13] [1] : \mchip.prog[12] [1];
  assign _0052_ = \mchip.pc [0] ? \mchip.prog[15] [1] : \mchip.prog[14] [1];
  assign _0053_ = \mchip.pc [1] ? _0052_ : _0051_;
  assign _0054_ = \mchip.pc [2] ? _0053_ : _0050_;
  assign _0055_ = \mchip.pc [3] ? _0054_ : _0047_;
  assign _0056_ = \mchip.pc [0] ? \mchip.prog[1] [0] : \mchip.prog[0] [0];
  assign _0057_ = \mchip.pc [0] ? \mchip.prog[3] [0] : \mchip.prog[2] [0];
  assign _0058_ = \mchip.pc [1] ? _0057_ : _0056_;
  assign _0059_ = \mchip.pc [0] ? \mchip.prog[5] [0] : \mchip.prog[4] [0];
  assign _0060_ = \mchip.pc [0] ? \mchip.prog[7] [0] : \mchip.prog[6] [0];
  assign _0061_ = \mchip.pc [1] ? _0060_ : _0059_;
  assign _0062_ = \mchip.pc [2] ? _0061_ : _0058_;
  assign _0063_ = \mchip.pc [0] ? \mchip.prog[9] [0] : \mchip.prog[8] [0];
  assign _0064_ = \mchip.pc [0] ? \mchip.prog[11] [0] : \mchip.prog[10] [0];
  assign _0065_ = \mchip.pc [1] ? _0064_ : _0063_;
  assign _0066_ = \mchip.pc [0] ? \mchip.prog[13] [0] : \mchip.prog[12] [0];
  assign _0067_ = \mchip.pc [0] ? \mchip.prog[15] [0] : \mchip.prog[14] [0];
  assign _0068_ = \mchip.pc [1] ? _0067_ : _0066_;
  assign _0069_ = \mchip.pc [2] ? _0068_ : _0065_;
  assign _0070_ = \mchip.pc [3] ? _0069_ : _0062_;
  assign _0071_ = ~(_0070_ | _0055_);
  assign _0072_ = \mchip.pc [0] ? \mchip.prog[1] [2] : \mchip.prog[0] [2];
  assign _0073_ = \mchip.pc [0] ? \mchip.prog[3] [2] : \mchip.prog[2] [2];
  assign _0074_ = \mchip.pc [1] ? _0073_ : _0072_;
  assign _0075_ = \mchip.pc [0] ? \mchip.prog[5] [2] : \mchip.prog[4] [2];
  assign _0076_ = \mchip.pc [0] ? \mchip.prog[7] [2] : \mchip.prog[6] [2];
  assign _0077_ = \mchip.pc [1] ? _0076_ : _0075_;
  assign _0078_ = \mchip.pc [2] ? _0077_ : _0074_;
  assign _0079_ = \mchip.pc [0] ? \mchip.prog[9] [2] : \mchip.prog[8] [2];
  assign _0080_ = \mchip.pc [0] ? \mchip.prog[11] [2] : \mchip.prog[10] [2];
  assign _0081_ = \mchip.pc [1] ? _0080_ : _0079_;
  assign _0082_ = \mchip.pc [0] ? \mchip.prog[13] [2] : \mchip.prog[12] [2];
  assign _0083_ = \mchip.pc [0] ? \mchip.prog[15] [2] : \mchip.prog[14] [2];
  assign _0084_ = \mchip.pc [1] ? _0083_ : _0082_;
  assign _0085_ = \mchip.pc [2] ? _0084_ : _0081_;
  assign _0086_ = \mchip.pc [3] ? _0085_ : _0078_;
  assign _0087_ = \mchip.pc [0] ? \mchip.prog[1] [3] : \mchip.prog[0] [3];
  assign _0088_ = \mchip.pc [0] ? \mchip.prog[3] [3] : \mchip.prog[2] [3];
  assign _0089_ = \mchip.pc [1] ? _0088_ : _0087_;
  assign _0090_ = \mchip.pc [0] ? \mchip.prog[5] [3] : \mchip.prog[4] [3];
  assign _0091_ = \mchip.pc [0] ? \mchip.prog[7] [3] : \mchip.prog[6] [3];
  assign _0092_ = \mchip.pc [1] ? _0091_ : _0090_;
  assign _0093_ = \mchip.pc [2] ? _0092_ : _0089_;
  assign _0094_ = \mchip.pc [0] ? \mchip.prog[9] [3] : \mchip.prog[8] [3];
  assign _0095_ = \mchip.pc [0] ? \mchip.prog[11] [3] : \mchip.prog[10] [3];
  assign _0096_ = \mchip.pc [1] ? _0095_ : _0094_;
  assign _0097_ = \mchip.pc [0] ? \mchip.prog[13] [3] : \mchip.prog[12] [3];
  assign _0098_ = \mchip.pc [0] ? \mchip.prog[15] [3] : \mchip.prog[14] [3];
  assign _0099_ = \mchip.pc [1] ? _0098_ : _0097_;
  assign _0100_ = \mchip.pc [2] ? _0099_ : _0096_;
  assign _0101_ = \mchip.pc [3] ? _0100_ : _0093_;
  assign _0102_ = _0101_ & ~(_0086_);
  assign _0103_ = _0102_ & _0071_;
  assign _0104_ = _0070_ & ~(_0055_);
  assign _0105_ = _0104_ & _0102_;
  assign _0106_ = ~(_0105_ | _0103_);
  assign _0107_ = _0101_ | ~(_0086_);
  assign _0108_ = _0104_ & ~(_0107_);
  assign _0109_ = _0086_ & ~(_0101_);
  assign _0110_ = _0070_ | ~(_0055_);
  assign _0111_ = _0109_ & ~(_0110_);
  assign _0112_ = _0111_ | _0108_;
  assign _0113_ = _0106_ & ~(_0112_);
  assign _0114_ = _0071_ & ~(_0107_);
  assign _0115_ = ~(_0070_ & _0055_);
  assign _0116_ = _0101_ | _0086_;
  assign _0117_ = ~(_0116_ | _0115_);
  assign _0118_ = _0117_ | _0114_;
  assign _0119_ = _0055_ & ~(_0070_);
  assign _0120_ = _0119_ & ~(_0116_);
  assign _0121_ = _0071_ & ~(_0116_);
  assign _0122_ = _0121_ | _0120_;
  assign _0123_ = _0122_ | _0118_;
  assign _0124_ = _0113_ & ~(_0123_);
  assign _0125_ = ~(_0101_ & _0086_);
  assign _0126_ = _0104_ & ~(_0125_);
  assign _0127_ = _0119_ & ~(_0125_);
  assign _0128_ = ~(_0127_ | _0126_);
  assign _0129_ = _0102_ & ~(_0110_);
  assign _0130_ = _0102_ & ~(_0115_);
  assign _0131_ = _0130_ | _0129_;
  assign _0132_ = _0125_ | _0115_;
  assign _0133_ = _0071_ & ~(_0125_);
  assign _0134_ = _0133_ | ~(_0132_);
  assign _0135_ = ~(_0134_ | _0131_);
  assign _0136_ = ~(_0135_ & _0128_);
  assign _0137_ = _0124_ & ~(_0136_);
  assign _0000_ = _0037_ & ~(_0137_);
  assign _0138_ = _0126_ | ~(_0132_);
  assign _0139_ = _0138_ | _0127_;
  assign _0140_ = _0133_ | _0130_;
  assign _0141_ = _0129_ | _0105_;
  assign _0142_ = _0141_ | _0140_;
  assign _0143_ = _0142_ | _0139_;
  assign _0144_ = _0109_ & ~(_0115_);
  assign _0145_ = _0144_ | _0103_;
  assign _0146_ = _0145_ | _0112_;
  assign _0147_ = _0146_ | _0123_;
  assign _0148_ = _0147_ | _0143_;
  assign _0149_ = _0148_ | ~(_0037_);
  assign _0150_ = _0149_ | io_in[1];
  assign _0001_ = _0150_ ? io_in[4] : \mchip.regval [0];
  assign _0002_ = _0150_ ? io_in[5] : \mchip.regval [1];
  assign _0003_ = _0150_ ? io_in[6] : \mchip.regval [2];
  assign _0004_ = _0150_ ? io_in[7] : \mchip.regval [3];
  assign _0151_ = \mchip.pc [0] ? \mchip.data[1] [0] : \mchip.data[0] [0];
  assign _0152_ = \mchip.pc [0] ? \mchip.data[3] [0] : \mchip.data[2] [0];
  assign _0153_ = \mchip.pc [1] ? _0152_ : _0151_;
  assign _0154_ = \mchip.pc [0] ? \mchip.data[5] [0] : \mchip.data[4] [0];
  assign _0155_ = \mchip.pc [0] ? \mchip.data[7] [0] : \mchip.data[6] [0];
  assign _0156_ = \mchip.pc [1] ? _0155_ : _0154_;
  assign _0157_ = \mchip.pc [2] ? _0156_ : _0153_;
  assign _0158_ = \mchip.pc [0] ? \mchip.data[9] [0] : \mchip.data[8] [0];
  assign _0159_ = \mchip.pc [0] ? \mchip.data[11] [0] : \mchip.data[10] [0];
  assign _0160_ = \mchip.pc [1] ? _0159_ : _0158_;
  assign _0161_ = \mchip.pc [0] ? \mchip.data[13] [0] : \mchip.data[12] [0];
  assign _0162_ = \mchip.pc [0] ? \mchip.data[15] [0] : \mchip.data[14] [0];
  assign _0163_ = \mchip.pc [1] ? _0162_ : _0161_;
  assign _0164_ = \mchip.pc [2] ? _0163_ : _0160_;
  assign _0165_ = \mchip.pc [3] ? _0164_ : _0157_;
  assign _0166_ = ~\mchip.regval [0];
  assign _0167_ = _0165_ & ~(_0166_);
  assign _0168_ = _0166_ & ~(_0165_);
  assign _0169_ = ~(_0168_ | _0167_);
  assign _0170_ = _0169_ & _0120_;
  assign _0171_ = _0169_ & _0114_;
  assign _0172_ = ~_0167_;
  assign _0173_ = _0117_ & ~(_0172_);
  assign _0174_ = _0173_ | _0171_;
  assign _0175_ = \mchip.pc [0] ? \mchip.data[1] [3] : \mchip.data[0] [3];
  assign _0176_ = \mchip.pc [0] ? \mchip.data[3] [3] : \mchip.data[2] [3];
  assign _0177_ = \mchip.pc [1] ? _0176_ : _0175_;
  assign _0178_ = \mchip.pc [0] ? \mchip.data[5] [3] : \mchip.data[4] [3];
  assign _0179_ = \mchip.pc [0] ? \mchip.data[7] [3] : \mchip.data[6] [3];
  assign _0180_ = \mchip.pc [1] ? _0179_ : _0178_;
  assign _0181_ = \mchip.pc [2] ? _0180_ : _0177_;
  assign _0182_ = \mchip.pc [0] ? \mchip.data[9] [3] : \mchip.data[8] [3];
  assign _0183_ = \mchip.pc [0] ? \mchip.data[11] [3] : \mchip.data[10] [3];
  assign _0184_ = \mchip.pc [1] ? _0183_ : _0182_;
  assign _0185_ = \mchip.pc [0] ? \mchip.data[13] [3] : \mchip.data[12] [3];
  assign _0186_ = \mchip.pc [0] ? \mchip.data[15] [3] : \mchip.data[14] [3];
  assign _0187_ = \mchip.pc [1] ? _0186_ : _0185_;
  assign _0188_ = \mchip.pc [2] ? _0187_ : _0184_;
  assign _0189_ = \mchip.pc [3] ? _0188_ : _0181_;
  assign _0190_ = _0189_ | _0166_;
  assign _0191_ = _0190_ | _0165_;
  assign _0192_ = \mchip.pc [0] ? \mchip.data[1] [1] : \mchip.data[0] [1];
  assign _0193_ = \mchip.pc [0] ? \mchip.data[3] [1] : \mchip.data[2] [1];
  assign _0194_ = \mchip.pc [1] ? _0193_ : _0192_;
  assign _0195_ = \mchip.pc [0] ? \mchip.data[5] [1] : \mchip.data[4] [1];
  assign _0196_ = \mchip.pc [0] ? \mchip.data[7] [1] : \mchip.data[6] [1];
  assign _0197_ = \mchip.pc [1] ? _0196_ : _0195_;
  assign _0198_ = \mchip.pc [2] ? _0197_ : _0194_;
  assign _0199_ = \mchip.pc [0] ? \mchip.data[9] [1] : \mchip.data[8] [1];
  assign _0200_ = \mchip.pc [0] ? \mchip.data[11] [1] : \mchip.data[10] [1];
  assign _0201_ = \mchip.pc [1] ? _0200_ : _0199_;
  assign _0202_ = \mchip.pc [0] ? \mchip.data[13] [1] : \mchip.data[12] [1];
  assign _0203_ = \mchip.pc [0] ? \mchip.data[15] [1] : \mchip.data[14] [1];
  assign _0204_ = \mchip.pc [1] ? _0203_ : _0202_;
  assign _0205_ = \mchip.pc [2] ? _0204_ : _0201_;
  assign _0206_ = \mchip.pc [3] ? _0205_ : _0198_;
  assign _0207_ = _0206_ | _0191_;
  assign _0208_ = \mchip.pc [0] ? \mchip.data[1] [2] : \mchip.data[0] [2];
  assign _0209_ = \mchip.pc [0] ? \mchip.data[3] [2] : \mchip.data[2] [2];
  assign _0210_ = \mchip.pc [1] ? _0209_ : _0208_;
  assign _0211_ = \mchip.pc [0] ? \mchip.data[5] [2] : \mchip.data[4] [2];
  assign _0212_ = \mchip.pc [0] ? \mchip.data[7] [2] : \mchip.data[6] [2];
  assign _0213_ = \mchip.pc [1] ? _0212_ : _0211_;
  assign _0214_ = \mchip.pc [2] ? _0213_ : _0210_;
  assign _0215_ = \mchip.pc [0] ? \mchip.data[9] [2] : \mchip.data[8] [2];
  assign _0216_ = \mchip.pc [0] ? \mchip.data[11] [2] : \mchip.data[10] [2];
  assign _0217_ = \mchip.pc [1] ? _0216_ : _0215_;
  assign _0218_ = \mchip.pc [0] ? \mchip.data[13] [2] : \mchip.data[12] [2];
  assign _0219_ = \mchip.pc [0] ? \mchip.data[15] [2] : \mchip.data[14] [2];
  assign _0220_ = \mchip.pc [1] ? _0219_ : _0218_;
  assign _0221_ = \mchip.pc [2] ? _0220_ : _0217_;
  assign _0222_ = \mchip.pc [3] ? _0221_ : _0214_;
  assign _0223_ = _0222_ | _0207_;
  assign _0224_ = ~(_0222_ | _0189_);
  assign _0225_ = ~_0224_;
  assign _0226_ = _0225_ | _0223_;
  assign _0227_ = _0108_ & ~(_0226_);
  assign _0228_ = ~\mchip.regval [3];
  assign _0229_ = ~\mchip.regval [1];
  assign _0230_ = _0189_ | _0229_;
  assign _0231_ = _0165_ ? _0230_ : _0190_;
  assign _0232_ = ~\mchip.regval [2];
  assign _0233_ = _0189_ | _0232_;
  assign _0234_ = _0189_ | _0228_;
  assign _0235_ = _0165_ ? _0234_ : _0233_;
  assign _0236_ = _0206_ ? _0235_ : _0231_;
  assign _0237_ = _0236_ | _0222_;
  assign _0238_ = _0224_ ? _0237_ : _0228_;
  assign _0239_ = _0111_ & ~(_0238_);
  assign _0240_ = _0239_ | _0227_;
  assign _0241_ = _0240_ | _0174_;
  assign _0242_ = _0241_ | _0170_;
  assign _0243_ = _0206_ | _0165_;
  assign _0244_ = _0224_ & ~(_0243_);
  assign _0245_ = ~(\mchip.regval [1] | \mchip.regval [0]);
  assign _0246_ = \mchip.regval [3] | \mchip.regval [2];
  assign _0247_ = _0245_ & ~(_0246_);
  assign _0248_ = _0247_ | _0244_;
  assign _0249_ = _0103_ & ~(_0248_);
  assign _0250_ = ~_0247_;
  assign _0251_ = _0244_ & ~(_0250_);
  assign _0252_ = _0105_ & ~(_0251_);
  assign _0253_ = _0252_ | _0249_;
  assign _0254_ = _0232_ & ~(_0222_);
  assign _0255_ = _0222_ & ~(_0232_);
  assign _0256_ = _0255_ | _0254_;
  assign _0257_ = _0228_ & ~(_0189_);
  assign _0258_ = ~(_0189_ & \mchip.regval [3]);
  assign _0259_ = _0257_ | ~(_0258_);
  assign _0260_ = _0259_ & _0256_;
  assign _0261_ = ~(_0206_ & \mchip.regval [1]);
  assign _0262_ = _0229_ & ~(_0206_);
  assign _0263_ = _0261_ & ~(_0262_);
  assign _0264_ = _0263_ | _0169_;
  assign _0265_ = _0260_ & ~(_0264_);
  assign _0266_ = _0265_ ? _0129_ : _0130_;
  assign _0267_ = _0266_ | _0253_;
  assign _0268_ = _0133_ & ~(_0172_);
  assign _0269_ = _0166_ & ~(_0132_);
  assign _0270_ = _0269_ | _0268_;
  assign _0271_ = _0126_ & ~(_0168_);
  assign _0272_ = _0127_ & ~(_0250_);
  assign _0273_ = _0272_ | _0271_;
  assign _0274_ = _0273_ | _0270_;
  assign _0275_ = _0274_ | _0267_;
  assign _0276_ = _0275_ | _0242_;
  assign _0277_ = _0128_ & ~(_0134_);
  assign _0278_ = _0131_ | ~(_0106_);
  assign _0279_ = _0277_ & ~(_0278_);
  assign _0280_ = _0118_ | _0112_;
  assign _0281_ = _0280_ | _0120_;
  assign _0282_ = _0279_ & ~(_0281_);
  assign _0497_[0] = _0282_ ? _0165_ : _0276_;
  assign _0283_ = _0263_ ^ _0172_;
  assign _0284_ = _0120_ & ~(_0283_);
  assign _0285_ = _0165_ & ~(\mchip.regval [0]);
  assign _0286_ = ~(_0285_ ^ _0263_);
  assign _0287_ = _0114_ & ~(_0286_);
  assign _0288_ = ~(_0165_ & \mchip.regval [1]);
  assign _0289_ = ~(_0206_ & \mchip.regval [0]);
  assign _0290_ = ~(_0289_ ^ _0288_);
  assign _0291_ = _0117_ & ~(_0290_);
  assign _0292_ = _0291_ | _0287_;
  assign _0293_ = _0165_ ? _0190_ : _0230_;
  assign _0294_ = _0293_ | _0206_;
  assign _0295_ = _0294_ | _0222_;
  assign _0296_ = _0295_ | _0225_;
  assign _0297_ = _0108_ & ~(_0296_);
  assign _0298_ = _0165_ ? _0233_ : _0230_;
  assign _0299_ = _0234_ | _0165_;
  assign _0300_ = _0206_ ? _0299_ : _0298_;
  assign _0301_ = _0300_ | _0222_;
  assign _0302_ = _0301_ | _0225_;
  assign _0303_ = _0111_ & ~(_0302_);
  assign _0304_ = _0303_ | _0297_;
  assign _0305_ = _0304_ | _0292_;
  assign _0306_ = _0305_ | _0284_;
  assign _0307_ = _0133_ & ~(_0261_);
  assign _0308_ = _0229_ & ~(_0132_);
  assign _0309_ = _0308_ | _0307_;
  assign _0310_ = _0126_ & ~(_0262_);
  assign _0311_ = _0310_ | _0309_;
  assign _0312_ = _0311_ | _0306_;
  assign _0497_[1] = _0282_ ? _0206_ : _0312_;
  assign _0313_ = _0206_ & ~(_0229_);
  assign _0314_ = _0263_ & ~(_0172_);
  assign _0315_ = _0314_ | _0313_;
  assign _0316_ = _0222_ ^ _0232_;
  assign _0317_ = _0316_ ^ _0315_;
  assign _0318_ = _0120_ & ~(_0317_);
  assign _0319_ = _0285_ | _0263_;
  assign _0320_ = \mchip.regval [1] & ~(_0206_);
  assign _0321_ = _0319_ & ~(_0320_);
  assign _0322_ = _0321_ ^ _0256_;
  assign _0323_ = _0114_ & ~(_0322_);
  assign _0324_ = ~(_0289_ | _0288_);
  assign _0325_ = _0165_ & ~(_0232_);
  assign _0326_ = ~(_0222_ & \mchip.regval [0]);
  assign _0327_ = _0326_ ^ _0313_;
  assign _0328_ = _0327_ ^ _0325_;
  assign _0329_ = _0328_ ^ _0324_;
  assign _0330_ = _0117_ & ~(_0329_);
  assign _0331_ = _0330_ | _0323_;
  assign _0332_ = _0165_ ? _0230_ : _0233_;
  assign _0333_ = _0206_ ? _0191_ : _0332_;
  assign _0334_ = _0333_ | _0222_;
  assign _0335_ = _0334_ | _0225_;
  assign _0336_ = _0108_ & ~(_0335_);
  assign _0337_ = _0235_ | _0206_;
  assign _0338_ = _0337_ | _0222_;
  assign _0339_ = _0338_ | _0225_;
  assign _0340_ = _0111_ & ~(_0339_);
  assign _0341_ = _0340_ | _0336_;
  assign _0342_ = _0341_ | _0331_;
  assign _0343_ = _0342_ | _0318_;
  assign _0344_ = _0255_ & _0133_;
  assign _0345_ = _0232_ & ~(_0132_);
  assign _0346_ = _0345_ | _0344_;
  assign _0347_ = _0126_ & ~(_0254_);
  assign _0348_ = _0347_ | _0346_;
  assign _0349_ = _0348_ | _0343_;
  assign _0497_[2] = _0282_ ? _0222_ : _0349_;
  assign _0350_ = _0315_ & ~(_0316_);
  assign _0351_ = _0350_ | _0255_;
  assign _0352_ = _0189_ ^ _0228_;
  assign _0353_ = _0352_ ^ _0351_;
  assign _0354_ = _0120_ & ~(_0353_);
  assign _0355_ = _0222_ | _0232_;
  assign _0356_ = _0256_ & ~(_0321_);
  assign _0357_ = _0355_ & ~(_0356_);
  assign _0358_ = _0357_ ^ _0259_;
  assign _0359_ = _0114_ & ~(_0358_);
  assign _0360_ = _0328_ | ~(_0324_);
  assign _0361_ = _0325_ & ~(_0327_);
  assign _0362_ = _0165_ & ~(_0228_);
  assign _0363_ = _0313_ & ~(_0326_);
  assign _0364_ = _0206_ & ~(_0232_);
  assign _0365_ = _0222_ & ~(_0229_);
  assign _0366_ = _0189_ & ~(_0166_);
  assign _0367_ = _0366_ ^ _0365_;
  assign _0368_ = _0367_ ^ _0364_;
  assign _0369_ = _0368_ ^ _0363_;
  assign _0370_ = _0369_ ^ _0362_;
  assign _0371_ = _0370_ ^ _0361_;
  assign _0372_ = _0371_ ^ _0360_;
  assign _0373_ = _0117_ & ~(_0372_);
  assign _0374_ = _0373_ | _0359_;
  assign _0375_ = _0165_ ? _0233_ : _0234_;
  assign _0376_ = _0206_ ? _0293_ : _0375_;
  assign _0377_ = _0376_ | _0222_;
  assign _0378_ = _0224_ ? _0377_ : _0166_;
  assign _0379_ = _0108_ & ~(_0378_);
  assign _0380_ = _0299_ | _0206_;
  assign _0381_ = _0380_ | _0222_;
  assign _0382_ = _0381_ | _0225_;
  assign _0383_ = _0111_ & ~(_0382_);
  assign _0384_ = _0383_ | _0379_;
  assign _0385_ = _0384_ | _0374_;
  assign _0386_ = _0385_ | _0354_;
  assign _0387_ = _0133_ & ~(_0258_);
  assign _0388_ = _0228_ & ~(_0132_);
  assign _0389_ = _0388_ | _0387_;
  assign _0390_ = _0126_ & ~(_0257_);
  assign _0391_ = _0390_ | _0389_;
  assign _0392_ = _0391_ | _0386_;
  assign _0497_[3] = _0282_ ? _0189_ : _0392_;
  assign _0393_ = ~\mchip.pc [0];
  assign _0394_ = io_in[3] & ~(io_in[2]);
  assign _0395_ = _0394_ & io_in[4];
  assign _0396_ = ~_0165_;
  assign _0397_ = \mchip.lastdata3  ? _0396_ : \mchip.pc [0];
  assign _0398_ = _0111_ | _0103_;
  assign _0399_ = _0117_ | _0108_;
  assign _0400_ = _0399_ | _0398_;
  assign _0401_ = _0120_ | _0114_;
  assign _0402_ = _0104_ & ~(_0116_);
  assign _0403_ = _0402_ | _0121_;
  assign _0404_ = _0403_ | _0401_;
  assign _0405_ = _0404_ | _0400_;
  assign _0406_ = _0405_ | _0143_;
  assign _0407_ = _0406_ ? \mchip.pc [0] : _0397_;
  assign _0408_ = _0037_ & ~(_0407_);
  assign _0409_ = _0408_ | _0395_;
  assign _0410_ = ~(_0394_ | _0037_);
  assign _0496_[0] = _0410_ ? _0393_ : _0409_;
  assign _0411_ = \mchip.pc [0] | ~(\mchip.pc [1]);
  assign _0412_ = \mchip.pc [1] | ~(\mchip.pc [0]);
  assign _0413_ = _0412_ & _0411_;
  assign _0414_ = ~_0413_;
  assign _0415_ = _0394_ & io_in[5];
  assign _0416_ = ~_0206_;
  assign _0417_ = \mchip.lastdata3  ? _0416_ : _0413_;
  assign _0418_ = _0406_ ? _0413_ : _0417_;
  assign _0419_ = _0037_ & ~(_0418_);
  assign _0420_ = _0419_ | _0415_;
  assign _0496_[1] = _0410_ ? _0414_ : _0420_;
  assign _0421_ = \mchip.pc [0] & \mchip.pc [1];
  assign _0422_ = _0421_ ^ \mchip.pc [2];
  assign _0423_ = _0394_ & io_in[6];
  assign _0424_ = \mchip.lastdata3  ? _0222_ : _0422_;
  assign _0425_ = _0406_ ? _0422_ : _0424_;
  assign _0426_ = _0425_ & _0037_;
  assign _0427_ = _0426_ | _0423_;
  assign _0496_[2] = _0410_ ? _0422_ : _0427_;
  assign _0428_ = _0421_ & ~(_0039_);
  assign _0429_ = _0428_ ^ \mchip.pc [3];
  assign _0430_ = _0394_ & io_in[7];
  assign _0431_ = \mchip.lastdata3  ? _0189_ : _0429_;
  assign _0432_ = _0406_ ? _0429_ : _0431_;
  assign _0433_ = _0432_ & _0037_;
  assign _0434_ = _0433_ | _0430_;
  assign _0496_[3] = _0410_ ? _0429_ : _0434_;
  assign _0435_ = ~io_in[1];
  assign _0436_ = io_in[3] | ~(io_in[2]);
  assign _0437_ = _0435_ & ~(_0436_);
  assign _0438_ = _0437_ | ~(_0150_);
  assign _0439_ = ~_0189_;
  assign _0440_ = _0150_ ? _0038_ : _0439_;
  assign _0441_ = ~_0222_;
  assign _0442_ = _0150_ ? _0039_ : _0441_;
  assign _0443_ = _0442_ | _0440_;
  assign _0444_ = _0150_ ? \mchip.pc [1] : _0206_;
  assign _0445_ = _0150_ ? _0393_ : _0396_;
  assign _0446_ = _0445_ | _0444_;
  assign _0447_ = _0446_ | _0443_;
  assign _0009_ = _0438_ & ~(_0447_);
  assign _0448_ = _0150_ ? _0040_ : _0416_;
  assign _0449_ = _0150_ ? \mchip.pc [0] : _0165_;
  assign _0450_ = _0449_ | _0448_;
  assign _0451_ = _0450_ | _0443_;
  assign _0010_ = _0438_ & ~(_0451_);
  assign _0452_ = io_in[2] | io_in[3];
  assign _0453_ = _0435_ & ~(_0452_);
  assign _0454_ = ~(\mchip.pc [2] & \mchip.pc [3]);
  assign _0455_ = _0454_ | _0412_;
  assign _0025_ = _0453_ & ~(_0455_);
  assign _0456_ = _0448_ | _0445_;
  assign _0457_ = _0456_ | _0443_;
  assign _0011_ = _0438_ & ~(_0457_);
  assign _0458_ = _0454_ | _0411_;
  assign _0026_ = _0453_ & ~(_0458_);
  assign _0459_ = \mchip.pc [2] | \mchip.pc [3];
  assign _0460_ = \mchip.pc [0] | \mchip.pc [1];
  assign _0461_ = _0460_ | _0459_;
  assign _0021_ = _0453_ & ~(_0461_);
  assign _0462_ = _0454_ | ~(_0421_);
  assign _0027_ = _0453_ & ~(_0462_);
  assign _0463_ = _0459_ | _0412_;
  assign _0028_ = _0453_ & ~(_0463_);
  assign _0464_ = _0459_ | _0411_;
  assign _0029_ = _0453_ & ~(_0464_);
  assign _0465_ = _0459_ | ~(_0421_);
  assign _0030_ = _0453_ & ~(_0465_);
  assign _0466_ = \mchip.pc [3] | ~(\mchip.pc [2]);
  assign _0467_ = _0466_ | _0460_;
  assign _0031_ = _0453_ & ~(_0467_);
  assign _0468_ = _0466_ | _0412_;
  assign _0032_ = _0453_ & ~(_0468_);
  assign _0469_ = _0466_ | _0411_;
  assign _0033_ = _0453_ & ~(_0469_);
  assign _0470_ = _0466_ | ~(_0421_);
  assign _0034_ = _0453_ & ~(_0470_);
  assign _0471_ = \mchip.pc [2] | ~(\mchip.pc [3]);
  assign _0472_ = _0471_ | _0460_;
  assign _0035_ = _0453_ & ~(_0472_);
  assign _0473_ = _0471_ | _0412_;
  assign _0036_ = _0453_ & ~(_0473_);
  assign _0474_ = _0471_ | _0411_;
  assign _0022_ = _0453_ & ~(_0474_);
  assign _0475_ = _0471_ | ~(_0421_);
  assign _0023_ = _0453_ & ~(_0475_);
  assign _0476_ = _0460_ | _0454_;
  assign _0024_ = _0453_ & ~(_0476_);
  assign _0477_ = _0150_ ? \mchip.pc [2] : _0222_;
  assign _0478_ = _0477_ | _0440_;
  assign _0479_ = _0478_ | _0456_;
  assign _0007_ = _0438_ & ~(_0479_);
  assign _0480_ = _0478_ | _0450_;
  assign _0006_ = _0438_ & ~(_0480_);
  assign _0481_ = _0478_ | _0446_;
  assign _0020_ = _0438_ & ~(_0481_);
  assign _0482_ = _0449_ | _0444_;
  assign _0483_ = _0482_ | _0478_;
  assign _0019_ = _0438_ & ~(_0483_);
  assign _0484_ = _0150_ ? \mchip.pc [3] : _0189_;
  assign _0485_ = _0484_ | _0477_;
  assign _0486_ = _0485_ | _0482_;
  assign _0005_ = _0438_ & ~(_0486_);
  assign _0487_ = _0484_ | _0442_;
  assign _0488_ = _0487_ | _0456_;
  assign _0018_ = _0438_ & ~(_0488_);
  assign _0489_ = _0487_ | _0450_;
  assign _0017_ = _0438_ & ~(_0489_);
  assign _0490_ = _0487_ | _0446_;
  assign _0016_ = _0438_ & ~(_0490_);
  assign _0491_ = _0487_ | _0482_;
  assign _0015_ = _0438_ & ~(_0491_);
  assign _0492_ = _0482_ | _0443_;
  assign _0008_ = _0438_ & ~(_0492_);
  assign _0493_ = _0485_ | _0446_;
  assign _0012_ = _0438_ & ~(_0493_);
  assign _0494_ = _0485_ | _0456_;
  assign _0014_ = _0438_ & ~(_0494_);
  assign _0495_ = _0485_ | _0450_;
  assign _0013_ = _0438_ & ~(_0495_);
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[0] [0] <= 1'h0;
    else if (_0021_) \mchip.prog[0] [0] <= io_in[4];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[0] [1] <= 1'h0;
    else if (_0021_) \mchip.prog[0] [1] <= io_in[5];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[0] [2] <= 1'h0;
    else if (_0021_) \mchip.prog[0] [2] <= io_in[6];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[0] [3] <= 1'h0;
    else if (_0021_) \mchip.prog[0] [3] <= io_in[7];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[1] [0] <= 1'h0;
    else if (_0028_) \mchip.prog[1] [0] <= io_in[4];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[1] [1] <= 1'h0;
    else if (_0028_) \mchip.prog[1] [1] <= io_in[5];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[1] [2] <= 1'h0;
    else if (_0028_) \mchip.prog[1] [2] <= io_in[6];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[1] [3] <= 1'h0;
    else if (_0028_) \mchip.prog[1] [3] <= io_in[7];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[2] [0] <= 1'h0;
    else if (_0029_) \mchip.prog[2] [0] <= io_in[4];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[2] [1] <= 1'h0;
    else if (_0029_) \mchip.prog[2] [1] <= io_in[5];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[2] [2] <= 1'h0;
    else if (_0029_) \mchip.prog[2] [2] <= io_in[6];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[2] [3] <= 1'h0;
    else if (_0029_) \mchip.prog[2] [3] <= io_in[7];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[3] [0] <= 1'h0;
    else if (_0030_) \mchip.prog[3] [0] <= io_in[4];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[3] [1] <= 1'h0;
    else if (_0030_) \mchip.prog[3] [1] <= io_in[5];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[3] [2] <= 1'h0;
    else if (_0030_) \mchip.prog[3] [2] <= io_in[6];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[3] [3] <= 1'h0;
    else if (_0030_) \mchip.prog[3] [3] <= io_in[7];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[4] [0] <= 1'h0;
    else if (_0031_) \mchip.prog[4] [0] <= io_in[4];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[4] [1] <= 1'h0;
    else if (_0031_) \mchip.prog[4] [1] <= io_in[5];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[4] [2] <= 1'h0;
    else if (_0031_) \mchip.prog[4] [2] <= io_in[6];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[4] [3] <= 1'h0;
    else if (_0031_) \mchip.prog[4] [3] <= io_in[7];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[5] [0] <= 1'h0;
    else if (_0032_) \mchip.prog[5] [0] <= io_in[4];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[5] [1] <= 1'h0;
    else if (_0032_) \mchip.prog[5] [1] <= io_in[5];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[5] [2] <= 1'h0;
    else if (_0032_) \mchip.prog[5] [2] <= io_in[6];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[5] [3] <= 1'h0;
    else if (_0032_) \mchip.prog[5] [3] <= io_in[7];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[6] [0] <= 1'h0;
    else if (_0033_) \mchip.prog[6] [0] <= io_in[4];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[6] [1] <= 1'h0;
    else if (_0033_) \mchip.prog[6] [1] <= io_in[5];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[6] [2] <= 1'h0;
    else if (_0033_) \mchip.prog[6] [2] <= io_in[6];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[6] [3] <= 1'h0;
    else if (_0033_) \mchip.prog[6] [3] <= io_in[7];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[7] [0] <= 1'h0;
    else if (_0034_) \mchip.prog[7] [0] <= io_in[4];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[7] [1] <= 1'h0;
    else if (_0034_) \mchip.prog[7] [1] <= io_in[5];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[7] [2] <= 1'h0;
    else if (_0034_) \mchip.prog[7] [2] <= io_in[6];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[7] [3] <= 1'h0;
    else if (_0034_) \mchip.prog[7] [3] <= io_in[7];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[8] [0] <= 1'h0;
    else if (_0035_) \mchip.prog[8] [0] <= io_in[4];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[8] [1] <= 1'h0;
    else if (_0035_) \mchip.prog[8] [1] <= io_in[5];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[8] [2] <= 1'h0;
    else if (_0035_) \mchip.prog[8] [2] <= io_in[6];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[8] [3] <= 1'h0;
    else if (_0035_) \mchip.prog[8] [3] <= io_in[7];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[9] [0] <= 1'h0;
    else if (_0036_) \mchip.prog[9] [0] <= io_in[4];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[9] [1] <= 1'h0;
    else if (_0036_) \mchip.prog[9] [1] <= io_in[5];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[9] [2] <= 1'h0;
    else if (_0036_) \mchip.prog[9] [2] <= io_in[6];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[9] [3] <= 1'h0;
    else if (_0036_) \mchip.prog[9] [3] <= io_in[7];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[10] [0] <= 1'h0;
    else if (_0022_) \mchip.prog[10] [0] <= io_in[4];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[10] [1] <= 1'h0;
    else if (_0022_) \mchip.prog[10] [1] <= io_in[5];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[10] [2] <= 1'h0;
    else if (_0022_) \mchip.prog[10] [2] <= io_in[6];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[10] [3] <= 1'h0;
    else if (_0022_) \mchip.prog[10] [3] <= io_in[7];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[11] [0] <= 1'h0;
    else if (_0023_) \mchip.prog[11] [0] <= io_in[4];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[11] [1] <= 1'h0;
    else if (_0023_) \mchip.prog[11] [1] <= io_in[5];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[11] [2] <= 1'h0;
    else if (_0023_) \mchip.prog[11] [2] <= io_in[6];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[11] [3] <= 1'h0;
    else if (_0023_) \mchip.prog[11] [3] <= io_in[7];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[12] [0] <= 1'h0;
    else if (_0024_) \mchip.prog[12] [0] <= io_in[4];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[12] [1] <= 1'h0;
    else if (_0024_) \mchip.prog[12] [1] <= io_in[5];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[12] [2] <= 1'h0;
    else if (_0024_) \mchip.prog[12] [2] <= io_in[6];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[12] [3] <= 1'h0;
    else if (_0024_) \mchip.prog[12] [3] <= io_in[7];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[13] [0] <= 1'h0;
    else if (_0025_) \mchip.prog[13] [0] <= io_in[4];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[13] [1] <= 1'h0;
    else if (_0025_) \mchip.prog[13] [1] <= io_in[5];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[13] [2] <= 1'h0;
    else if (_0025_) \mchip.prog[13] [2] <= io_in[6];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[13] [3] <= 1'h0;
    else if (_0025_) \mchip.prog[13] [3] <= io_in[7];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[14] [0] <= 1'h0;
    else if (_0026_) \mchip.prog[14] [0] <= io_in[4];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[14] [1] <= 1'h0;
    else if (_0026_) \mchip.prog[14] [1] <= io_in[5];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[14] [2] <= 1'h0;
    else if (_0026_) \mchip.prog[14] [2] <= io_in[6];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[14] [3] <= 1'h0;
    else if (_0026_) \mchip.prog[14] [3] <= io_in[7];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[15] [0] <= 1'h0;
    else if (_0027_) \mchip.prog[15] [0] <= io_in[4];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[15] [1] <= 1'h0;
    else if (_0027_) \mchip.prog[15] [1] <= io_in[5];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[15] [2] <= 1'h0;
    else if (_0027_) \mchip.prog[15] [2] <= io_in[6];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.prog[15] [3] <= 1'h0;
    else if (_0027_) \mchip.prog[15] [3] <= io_in[7];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.pc [0] <= 1'h0;
    else \mchip.pc [0] <= _0496_[0];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.pc [1] <= 1'h0;
    else \mchip.pc [1] <= _0496_[1];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.pc [2] <= 1'h0;
    else \mchip.pc [2] <= _0496_[2];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.pc [3] <= 1'h0;
    else \mchip.pc [3] <= _0496_[3];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[4] [0] <= 1'h0;
    else if (_0015_) \mchip.data[4] [0] <= _0001_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[4] [1] <= 1'h0;
    else if (_0015_) \mchip.data[4] [1] <= _0002_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[4] [2] <= 1'h0;
    else if (_0015_) \mchip.data[4] [2] <= _0003_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[4] [3] <= 1'h0;
    else if (_0015_) \mchip.data[4] [3] <= _0004_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[5] [0] <= 1'h0;
    else if (_0016_) \mchip.data[5] [0] <= _0001_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[5] [1] <= 1'h0;
    else if (_0016_) \mchip.data[5] [1] <= _0002_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[5] [2] <= 1'h0;
    else if (_0016_) \mchip.data[5] [2] <= _0003_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[5] [3] <= 1'h0;
    else if (_0016_) \mchip.data[5] [3] <= _0004_;
  /* \always_ff  = 32'd1 */
  /* src = "d32_ngaertne_cpu/src/wrapper.v:7.30-10.14|d32_ngaertne_cpu/src/cpu.sv:62.3-208.6" */
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.lastdata3  <= 1'h0;
    else \mchip.lastdata3  <= io_in[7];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[1] [0] <= 1'h0;
    else if (_0012_) \mchip.data[1] [0] <= _0001_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[1] [1] <= 1'h0;
    else if (_0012_) \mchip.data[1] [1] <= _0002_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[1] [2] <= 1'h0;
    else if (_0012_) \mchip.data[1] [2] <= _0003_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[1] [3] <= 1'h0;
    else if (_0012_) \mchip.data[1] [3] <= _0004_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[2] [0] <= 1'h0;
    else if (_0013_) \mchip.data[2] [0] <= _0001_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[2] [1] <= 1'h0;
    else if (_0013_) \mchip.data[2] [1] <= _0002_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[2] [2] <= 1'h0;
    else if (_0013_) \mchip.data[2] [2] <= _0003_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[2] [3] <= 1'h0;
    else if (_0013_) \mchip.data[2] [3] <= _0004_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[3] [0] <= 1'h0;
    else if (_0014_) \mchip.data[3] [0] <= _0001_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[3] [1] <= 1'h0;
    else if (_0014_) \mchip.data[3] [1] <= _0002_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[3] [2] <= 1'h0;
    else if (_0014_) \mchip.data[3] [2] <= _0003_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[3] [3] <= 1'h0;
    else if (_0014_) \mchip.data[3] [3] <= _0004_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[12] [0] <= 1'h0;
    else if (_0008_) \mchip.data[12] [0] <= _0001_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[12] [1] <= 1'h0;
    else if (_0008_) \mchip.data[12] [1] <= _0002_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[12] [2] <= 1'h0;
    else if (_0008_) \mchip.data[12] [2] <= _0003_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[12] [3] <= 1'h0;
    else if (_0008_) \mchip.data[12] [3] <= _0004_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[15] [0] <= 1'h0;
    else if (_0011_) \mchip.data[15] [0] <= _0001_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[15] [1] <= 1'h0;
    else if (_0011_) \mchip.data[15] [1] <= _0002_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[15] [2] <= 1'h0;
    else if (_0011_) \mchip.data[15] [2] <= _0003_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[15] [3] <= 1'h0;
    else if (_0011_) \mchip.data[15] [3] <= _0004_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[14] [0] <= 1'h0;
    else if (_0010_) \mchip.data[14] [0] <= _0001_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[14] [1] <= 1'h0;
    else if (_0010_) \mchip.data[14] [1] <= _0002_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[14] [2] <= 1'h0;
    else if (_0010_) \mchip.data[14] [2] <= _0003_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[14] [3] <= 1'h0;
    else if (_0010_) \mchip.data[14] [3] <= _0004_;
  /* \always_ff  = 32'd1 */
  /* src = "d32_ngaertne_cpu/src/wrapper.v:7.30-10.14|d32_ngaertne_cpu/src/cpu.sv:62.3-208.6" */
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.regval [0] <= 1'h0;
    else if (_0000_) \mchip.regval [0] <= _0497_[0];
  /* \always_ff  = 32'd1 */
  /* src = "d32_ngaertne_cpu/src/wrapper.v:7.30-10.14|d32_ngaertne_cpu/src/cpu.sv:62.3-208.6" */
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.regval [1] <= 1'h0;
    else if (_0000_) \mchip.regval [1] <= _0497_[1];
  /* \always_ff  = 32'd1 */
  /* src = "d32_ngaertne_cpu/src/wrapper.v:7.30-10.14|d32_ngaertne_cpu/src/cpu.sv:62.3-208.6" */
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.regval [2] <= 1'h0;
    else if (_0000_) \mchip.regval [2] <= _0497_[2];
  /* \always_ff  = 32'd1 */
  /* src = "d32_ngaertne_cpu/src/wrapper.v:7.30-10.14|d32_ngaertne_cpu/src/cpu.sv:62.3-208.6" */
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.regval [3] <= 1'h0;
    else if (_0000_) \mchip.regval [3] <= _0497_[3];
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[10] [0] <= 1'h0;
    else if (_0006_) \mchip.data[10] [0] <= _0001_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[10] [1] <= 1'h0;
    else if (_0006_) \mchip.data[10] [1] <= _0002_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[10] [2] <= 1'h0;
    else if (_0006_) \mchip.data[10] [2] <= _0003_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[10] [3] <= 1'h0;
    else if (_0006_) \mchip.data[10] [3] <= _0004_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[8] [0] <= 1'h0;
    else if (_0019_) \mchip.data[8] [0] <= _0001_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[8] [1] <= 1'h0;
    else if (_0019_) \mchip.data[8] [1] <= _0002_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[8] [2] <= 1'h0;
    else if (_0019_) \mchip.data[8] [2] <= _0003_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[8] [3] <= 1'h0;
    else if (_0019_) \mchip.data[8] [3] <= _0004_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[7] [0] <= 1'h0;
    else if (_0018_) \mchip.data[7] [0] <= _0001_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[7] [1] <= 1'h0;
    else if (_0018_) \mchip.data[7] [1] <= _0002_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[7] [2] <= 1'h0;
    else if (_0018_) \mchip.data[7] [2] <= _0003_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[7] [3] <= 1'h0;
    else if (_0018_) \mchip.data[7] [3] <= _0004_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[0] [0] <= 1'h0;
    else if (_0005_) \mchip.data[0] [0] <= _0001_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[0] [1] <= 1'h0;
    else if (_0005_) \mchip.data[0] [1] <= _0002_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[0] [2] <= 1'h0;
    else if (_0005_) \mchip.data[0] [2] <= _0003_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[0] [3] <= 1'h0;
    else if (_0005_) \mchip.data[0] [3] <= _0004_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[6] [0] <= 1'h0;
    else if (_0017_) \mchip.data[6] [0] <= _0001_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[6] [1] <= 1'h0;
    else if (_0017_) \mchip.data[6] [1] <= _0002_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[6] [2] <= 1'h0;
    else if (_0017_) \mchip.data[6] [2] <= _0003_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[6] [3] <= 1'h0;
    else if (_0017_) \mchip.data[6] [3] <= _0004_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[9] [0] <= 1'h0;
    else if (_0020_) \mchip.data[9] [0] <= _0001_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[9] [1] <= 1'h0;
    else if (_0020_) \mchip.data[9] [1] <= _0002_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[9] [2] <= 1'h0;
    else if (_0020_) \mchip.data[9] [2] <= _0003_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[9] [3] <= 1'h0;
    else if (_0020_) \mchip.data[9] [3] <= _0004_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[11] [0] <= 1'h0;
    else if (_0007_) \mchip.data[11] [0] <= _0001_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[11] [1] <= 1'h0;
    else if (_0007_) \mchip.data[11] [1] <= _0002_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[11] [2] <= 1'h0;
    else if (_0007_) \mchip.data[11] [2] <= _0003_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[11] [3] <= 1'h0;
    else if (_0007_) \mchip.data[11] [3] <= _0004_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[13] [0] <= 1'h0;
    else if (_0009_) \mchip.data[13] [0] <= _0001_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[13] [1] <= 1'h0;
    else if (_0009_) \mchip.data[13] [1] <= _0002_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[13] [2] <= 1'h0;
    else if (_0009_) \mchip.data[13] [2] <= _0003_;
  always @(posedge io_in[0])
    if (io_in[1]) \mchip.data[13] [3] <= 1'h0;
    else if (_0009_) \mchip.data[13] [3] <= _0004_;
  assign io_out = { 6'h00, \mchip.regval , \mchip.pc  };
  assign \mchip.clock  = io_in[0];
  assign \mchip.inputdata  = io_in[7:4];
  assign \mchip.instruction  = io_in[3:2];
  assign \mchip.io_in  = io_in[7:0];
  assign \mchip.io_out  = { \mchip.regval , \mchip.pc  };
  assign \mchip.reset  = io_in[1];
endmodule
